package com.mycompany.pia.gui;

import com.mycompany.pia.Usuario;
import com.mycompany.pia.db.UsuarioManager;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

public class Registro extends javax.swing.JFrame {
    private final ImageIcon iconError = new ImageIcon(new ImageIcon(
            getClass().getResource("/error_icon.png")).getImage());
    private final ImageIcon iconCheck = new ImageIcon(new ImageIcon(
        getClass().getResource("/ok_icon.png")).getImage());
    private final ImageIcon iconError48 = new ImageIcon(new ImageIcon(
            getClass().getResource("/error_icon_48px.png")).getImage());
    private final ImageIcon iconCheck48 = new ImageIcon(new ImageIcon(
        getClass().getResource("/ok_icon_48px.png")).getImage());
    
    private Timer timerEmail = null;
    private Timer timerUser = null;
    private Timer timerPassword = null;
    
    public Registro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtUser = new javax.swing.JTextField();
        btnRegistro = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        iconUser = new javax.swing.JLabel();
        iconPassword = new javax.swing.JLabel();
        iconEmail = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Registro de usuario");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("Correo electrónico:");

        lblUser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblUser.setText("Nombre de usuario:");

        lblPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPassword.setText("Contraseña:");

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        txtUser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnRegistro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRegistro.setText("Registrarse");
        btnRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistroActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        iconUser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        iconUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconUserMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconUserMouseExited(evt);
            }
        });

        iconPassword.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        iconPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconPasswordMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconPasswordMouseExited(evt);
            }
        });

        iconEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        iconEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                iconEmailMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                iconEmailMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(btnRegistro)
                        .addGap(35, 35, 35)
                        .addComponent(btnCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUser)
                            .addComponent(txtEmail)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(iconUser, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iconPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iconEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblTitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUser)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblPassword)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistro)
                    .addComponent(btnCancelar))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
        new Menu().setVisible(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistroActionPerformed
        String email = txtEmail.getText();
        String username = txtUser.getText();
        String password = new String(txtPassword.getPassword());
        String msgError = "";
        boolean valido = true;
        
        Usuario user = new Usuario(email, username, password);
        UsuarioManager um = new UsuarioManager();
        
        if(user.validarEmail())
            iconEmail.setIcon(iconCheck);
        else {
            valido = false;
            msgError += "Correo electrónico inválido.\n";
            iconEmail.setIcon(iconError);
        }          
        
        if(user.validarUsername())
            iconUser.setIcon(iconCheck);
        else {
            valido = false;
            msgError += "Nombre de usuario inválido.\n";
            iconUser.setIcon(iconError);
        }          
        
        if(user.validarPassword())
            iconPassword.setIcon(iconCheck);
        else {
            valido = false;
            msgError += "Contraseña inválida.\n";
            iconPassword.setIcon(iconError);
        }
        
        if(valido) {
            if(um.checkUserExistance(user)) {
                iconEmail.setIcon(iconError);
                JOptionPane.showMessageDialog(rootPane,
                        "El usuario ya existe.",
                        "Datos de registro inválidos",
                        0,
                        iconError48);
            } else {
                um.crearUsuario(user);
                JOptionPane.showMessageDialog(rootPane,
                        "Registro exitoso. Bienvenido " + user.getUsername() + ".",
                        "Datos de registro válidos",
                        1,
                        iconCheck48);
                this.dispose();
                new Menu().setVisible(true);
            }
        } else {
            msgError += "\nPase el cursor sobre los íconos de error para más detalles.";
            JOptionPane.showMessageDialog(rootPane,
                    msgError,
                    "Datos de registro inválidos",
                    0,
                    iconError48);
        }
    }//GEN-LAST:event_btnRegistroActionPerformed

    private void iconUserMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconUserMouseEntered
        String requisitos = """
                            El nombre de usuario debe tener las siguientes características:
                            - Longitud de 5 a 45 caracteres.
                            - Debe contener sólo letras, números o guion bajo.""";
        
        timerUser = new Timer();
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                if(iconUser.getIcon() != null && iconUser.getIcon().equals(iconError))
                    JOptionPane.showMessageDialog(rootPane, requisitos, "Requisitos de nombre de usuario", 1);
                timerUser.cancel();
            }
        };
        timerUser.schedule(task, 700, 10000);
    }//GEN-LAST:event_iconUserMouseEntered

    private void iconPasswordMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconPasswordMouseEntered
        String requisitos = """
                            La contraseña debe tener las siguientes características:
                            - Longitud de 8 a 16 caracteres.
                            - Debe contener por lo menos una letra minúscula.
                            - Debe contener por lo menos una letra mayúscula.
                            - Debe contener por lo menos un número.
                            - Debe contener por lo menos un carácter especial ($%&#.\\-=:;,).""";
        
        timerPassword = new Timer();
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                if(iconPassword.getIcon() != null && iconPassword.getIcon().equals(iconError))
                    JOptionPane.showMessageDialog(rootPane, requisitos, "Requisitos de contraseña", 1);
                timerPassword.cancel();
            }
        };
        timerPassword.schedule(task, 700, 10000);
    }//GEN-LAST:event_iconPasswordMouseEntered

    private void iconEmailMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconEmailMouseEntered
        String requisitos = """
                            El correo debe tener las siguientes características:
                            - Longitud de 10 a 30 caracteres.
                            - Debe contener solo una @.
                            - Antes de la @ debe tener al menos 3 caracteres (letras, números, guion bajo o punto).
                            - Después de la @ debe tener al menos 3 caracteres (letras o números).
                            - Después de dichos caracteres, debe tener un punto.
                            - Después del punto debe tener de 2 a 3 caractres (sólo letras).""";
        
        timerEmail = new Timer();
        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                if(iconEmail.getIcon() != null && iconEmail.getIcon().equals(iconError))
                    JOptionPane.showMessageDialog(rootPane, requisitos, "Requisitos de correo electrónico", 1);
                timerEmail.cancel();
            }
        };
        timerEmail.schedule(task, 700, 10000);
    }//GEN-LAST:event_iconEmailMouseEntered

    private void iconUserMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconUserMouseExited
        timerUser.cancel();
    }//GEN-LAST:event_iconUserMouseExited

    private void iconPasswordMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconPasswordMouseExited
        timerPassword.cancel();
    }//GEN-LAST:event_iconPasswordMouseExited

    private void iconEmailMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconEmailMouseExited
        timerEmail.cancel();
    }//GEN-LAST:event_iconEmailMouseExited

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRegistro;
    private javax.swing.JLabel iconEmail;
    private javax.swing.JLabel iconPassword;
    private javax.swing.JLabel iconUser;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblUser;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
